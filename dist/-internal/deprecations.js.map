{"version":3,"file":"deprecations.js","sources":["../../src/-internal/deprecations.ts"],"sourcesContent":["import type { BaseContext } from '../setup-context';\nimport { registerDeprecationHandler } from '@ember/debug';\nimport isPromise from './is-promise.ts';\n\nexport interface DeprecationOptions {\n  id: string;\n  until: string;\n  for?: string;\n  since?: {\n    available: string;\n  };\n}\n\nexport interface DeprecationFailure {\n  message: string;\n  options?: DeprecationOptions;\n}\n\nconst DEPRECATIONS = new WeakMap<BaseContext, Array<DeprecationFailure>>();\n\n/**\n *\n * Provides the list of deprecation failures associated with a given base context;\n *\n * @private\n * @param {BaseContext} [context] the test context\n * @return {Array<DeprecationFailure>} the Deprecation Failures associated with the corresponding BaseContext;\n */\nexport function getDeprecationsForContext(\n  context: BaseContext,\n): Array<DeprecationFailure> {\n  if (!context) {\n    throw new TypeError(\n      `[@ember/test-helpers] could not get deprecations for an invalid test context: '${context}'`,\n    );\n  }\n\n  let deprecations = DEPRECATIONS.get(context);\n\n  if (!Array.isArray(deprecations)) {\n    deprecations = [];\n    DEPRECATIONS.set(context, deprecations);\n  }\n\n  return deprecations;\n}\n\n/**\n *\n * Provides the list of deprecation failures associated with a given base\n * context which occur while a callback is executed. This callback can be\n * synchronous, or it can be an async function.\n *\n * @private\n * @param {BaseContext} [context] the test context\n * @param {Function} [callback] The callback that when executed will have its DeprecationFailure recorded\n * @return {Array<DeprecationFailure>} The Deprecation Failures associated with the corresponding baseContext which occurred while the CallbackFunction was executed\n */\nexport function getDeprecationsDuringCallbackForContext(\n  context: BaseContext,\n  callback: () => void,\n): Array<DeprecationFailure> | Promise<Array<DeprecationFailure>> {\n  if (!context) {\n    throw new TypeError(\n      `[@ember/test-helpers] could not get deprecations for an invalid test context: '${context}'`,\n    );\n  }\n\n  const deprecations = getDeprecationsForContext(context);\n  const previousLength = deprecations.length;\n\n  const result = callback();\n\n  if (isPromise(result)) {\n    return Promise.resolve(result).then(() => {\n      return deprecations.slice(previousLength); // only return deprecations created as a result of the callback\n    });\n  } else {\n    return deprecations.slice(previousLength); // only return deprecations created as a result of the callback\n  }\n}\n\n// This provides (when the environment supports) queryParam support for deprecations:\n// * squelch deprecations by name via: `/tests/index.html?disabledDeprecations=this-property-fallback,some-other-thing`\n// * enable a debuggger when a deprecation by a specific name is encountered via: `/tests/index.html?debugDeprecations=some-other-thing` when the\nif (typeof URLSearchParams !== 'undefined') {\n  const queryParams = new URLSearchParams(\n    document.location.search.substring(1),\n  );\n  const disabledDeprecations = queryParams.get('disabledDeprecations');\n  const debugDeprecations = queryParams.get('debugDeprecations');\n\n  // When using `/tests/index.html?disabledDeprecations=this-property-fallback,some-other-thing`\n  // those deprecations will be squelched\n  if (disabledDeprecations) {\n    registerDeprecationHandler((message, options, next) => {\n      if (!options || !disabledDeprecations.includes(options.id)) {\n        next.apply(null, [message, options]);\n      }\n    });\n  }\n\n  // When using `/tests/index.html?debugDeprecations=some-other-thing` when the\n  // `some-other-thing` deprecation is triggered, this `debugger` will be hit`\n  if (debugDeprecations) {\n    registerDeprecationHandler((message, options, next) => {\n      if (options && debugDeprecations.includes(options.id)) {\n        debugger; // eslint-disable-line no-debugger\n      }\n\n      next.apply(null, [message, options]);\n    });\n  }\n}\n"],"names":["DEPRECATIONS","WeakMap","getDeprecationsForContext","context","TypeError","deprecations","get","Array","isArray","set","getDeprecationsDuringCallbackForContext","callback","previousLength","length","result","isPromise","Promise","resolve","then","slice","URLSearchParams","queryParams","document","location","search","substring","disabledDeprecations","debugDeprecations","registerDeprecationHandler","message","options","next","includes","id","apply"],"mappings":"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"}