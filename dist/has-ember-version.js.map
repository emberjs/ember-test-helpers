{"version":3,"file":"has-ember-version.js","sources":["../src/has-ember-version.ts"],"sourcesContent":["// @ts-ignore\nimport { VERSION } from '@ember/version';\n\n/**\n  Checks if the currently running Ember version is greater than or equal to the\n  specified major and minor version numbers.\n\n  @private\n  @param {number} major the major version number to compare\n  @param {number} minor the minor version number to compare\n  @returns {boolean} true if the Ember version is >= MAJOR.MINOR specified, false otherwise\n*/\nexport default function hasEmberVersion(major: number, minor: number): boolean {\n  const numbers = VERSION.split('-')[0]?.split('.');\n\n  if (!numbers || !numbers[0] || !numbers[1]) {\n    throw new Error('`Ember.VERSION` is not set.');\n  }\n\n  const actualMajor = parseInt(numbers[0], 10);\n  const actualMinor = parseInt(numbers[1], 10);\n  return actualMajor > major || (actualMajor === major && actualMinor >= minor);\n}\n"],"names":["hasEmberVersion","major","minor","numbers","VERSION","split","Error","actualMajor","parseInt","actualMinor"],"mappings":";;AAAA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASA,eAAeA,CAACC,KAAa,EAAEC,KAAa,EAAW;AAC7E,EAAA,MAAMC,OAAO,GAAGC,OAAO,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAEA,KAAK,CAAC,GAAG,CAAC,CAAA;AAEjD,EAAA,IAAI,CAACF,OAAO,IAAI,CAACA,OAAO,CAAC,CAAC,CAAC,IAAI,CAACA,OAAO,CAAC,CAAC,CAAC,EAAE;AAC1C,IAAA,MAAM,IAAIG,KAAK,CAAC,6BAA6B,CAAC,CAAA;AAChD,GAAA;EAEA,MAAMC,WAAW,GAAGC,QAAQ,CAACL,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAA;EAC5C,MAAMM,WAAW,GAAGD,QAAQ,CAACL,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAA;EAC5C,OAAOI,WAAW,GAAGN,KAAK,IAAKM,WAAW,KAAKN,KAAK,IAAIQ,WAAW,IAAIP,KAAM,CAAA;AAC/E;;;;"}