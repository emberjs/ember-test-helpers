{"version":3,"file":"select.js","sources":["../../src/dom/select.ts"],"sourcesContent":["import getElement from './-get-element.ts';\nimport isSelectElement from './-is-select-element.ts';\nimport { __focus__ } from './focus.ts';\nimport settled from '../settled.ts';\nimport fireEvent from './fire-event.ts';\nimport type { Target } from './-target.ts';\nimport { runHooks } from '../helper-hooks.ts';\nimport getDescription from './-get-description.ts';\n\n// eslint-disable-next-line require-jsdoc\nfunction errorMessage(message: string, target: Target) {\n  const description = getDescription(target);\n  return `${message} when calling \\`select('${description}')\\`.`;\n}\n\n/**\n  Set the `selected` property true for the provided option the target is a\n  select element (or set the select property true for multiple options if the\n  multiple attribute is set true on the HTMLSelectElement) then trigger\n  `change` and `input` events on the specified target.\n\n  @public\n  @param {string|Element|IDOMElementDescriptor} target the element, selector, or descriptor for the select element\n  @param {string|string[]} options the value/values of the items to select\n  @param {boolean} keepPreviouslySelected a flag keep any existing selections\n  @return {Promise<void>} resolves when the application is settled\n\n  @example\n  <caption>\n    Emulating selecting an option or multiple options using `select`\n  </caption>\n\n  select('select', 'apple');\n\n  select('select', ['apple', 'orange']);\n\n  select('select', ['apple', 'orange'], true);\n*/\nexport default function select(\n  target: Target,\n  options: string | string[],\n  keepPreviouslySelected = false,\n): Promise<void> {\n  return Promise.resolve()\n    .then(() =>\n      runHooks('select', 'start', target, options, keepPreviouslySelected),\n    )\n    .then(() => {\n      if (!target) {\n        throw new Error(\n          'Must pass an element, selector, or descriptor to `select`.',\n        );\n      }\n\n      if (typeof options === 'undefined' || options === null) {\n        throw new Error(\n          'Must provide an `option` or `options` to select when calling `select`.',\n        );\n      }\n\n      const element = getElement(target);\n      if (!element) {\n        throw new Error(errorMessage('Element not found', target));\n      }\n\n      if (!isSelectElement(element)) {\n        throw new Error(\n          errorMessage('Element is not a HTMLSelectElement', target),\n        );\n      }\n\n      if (element.disabled) {\n        throw new Error(errorMessage('Element is disabled', target));\n      }\n\n      options = Array.isArray(options) ? options : [options];\n\n      if (!element.multiple && options.length > 1) {\n        throw new Error(\n          errorMessage(\n            'HTMLSelectElement `multiple` attribute is set to `false` but multiple options were passed',\n            target,\n          ),\n        );\n      }\n\n      return __focus__(element).then(() => element);\n    })\n    .then((element) => {\n      for (let i = 0; i < element.options.length; i++) {\n        const elementOption = element.options.item(i);\n        if (elementOption) {\n          if (options.indexOf(elementOption.value) > -1) {\n            elementOption.selected = true;\n          } else if (!keepPreviouslySelected) {\n            elementOption.selected = false;\n          }\n        }\n      }\n\n      return fireEvent(element, 'input')\n        .then(() => fireEvent(element, 'change'))\n        .then(settled);\n    })\n    .then(() =>\n      runHooks('select', 'end', target, options, keepPreviouslySelected),\n    );\n}\n"],"names":["errorMessage","message","target","description","getDescription","select","options","keepPreviouslySelected","Promise","resolve","then","runHooks","Error","element","getElement","isSelectElement","disabled","Array","isArray","multiple","length","__focus__","i","elementOption","item","indexOf","value","selected","fireEvent","settled"],"mappings":"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"}