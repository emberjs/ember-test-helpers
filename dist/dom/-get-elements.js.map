{"version":3,"file":"-get-elements.js","sources":["../../src/dom/-get-elements.ts"],"sourcesContent":["import {\n  type IDOMElementDescriptor,\n  lookupDescriptorData,\n  resolveDOMElements,\n} from 'dom-element-descriptors';\nimport getRootElement from './get-root-element.ts';\n\nfunction getElements(target: string): NodeListOf<Element>;\nfunction getElements(target: IDOMElementDescriptor): Iterable<Element>;\nfunction getElements(target: string | IDOMElementDescriptor): Iterable<Element>;\n/**\n  Used internally by the DOM interaction helpers to find multiple elements.\n\n  @private\n  @param {string} target the selector to retrieve\n  @returns {NodeList} the matched elements\n*/\nfunction getElements(\n  target: string | IDOMElementDescriptor,\n): NodeListOf<Element> | Iterable<Element> {\n  if (typeof target === 'string') {\n    const rootElement = getRootElement();\n\n    return rootElement.querySelectorAll(target);\n  } else {\n    const descriptorData = lookupDescriptorData(target);\n    if (descriptorData) {\n      return resolveDOMElements(descriptorData);\n    } else {\n      throw new Error('Must use a selector string or DOM element descriptor');\n    }\n  }\n}\n\nexport default getElements;\n"],"names":["getElements","target","rootElement","getRootElement","querySelectorAll","descriptorData","lookupDescriptorData","resolveDOMElements","Error"],"mappings":";;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,WAAWA,CAClBC,MAAsC,EACG;AACzC,EAAA,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;AAC9B,IAAA,MAAMC,WAAW,GAAGC,cAAc,EAAE,CAAA;AAEpC,IAAA,OAAOD,WAAW,CAACE,gBAAgB,CAACH,MAAM,CAAC,CAAA;AAC7C,GAAC,MAAM;AACL,IAAA,MAAMI,cAAc,GAAGC,oBAAoB,CAACL,MAAM,CAAC,CAAA;AACnD,IAAA,IAAII,cAAc,EAAE;MAClB,OAAOE,kBAAkB,CAACF,cAAc,CAAC,CAAA;AAC3C,KAAC,MAAM;AACL,MAAA,MAAM,IAAIG,KAAK,CAAC,sDAAsD,CAAC,CAAA;AACzE,KAAA;AACF,GAAA;AACF;;;;"}