{"version":3,"file":"get-root-element.js","sources":["../../src/dom/get-root-element.ts"],"sourcesContent":["import { getContext, isTestContext } from '../setup-context.ts';\nimport { isDocument, isElement } from './-target.ts';\n\n/**\n  Get the root element of the application under test (usually `#ember-testing`)\n\n  @public\n  @returns {Element} the root element\n\n  @example\n  <caption>\n    Getting the root element of the application and checking that it is equal\n    to the element with id 'ember-testing'.\n  </caption>\n  assert.equal(getRootElement(), document.querySelector('#ember-testing'));\n*/\nexport default function getRootElement(): Element | Document {\n  const context = getContext();\n\n  if (!context || !isTestContext(context) || !context.owner) {\n    throw new Error(\n      'Must setup rendering context before attempting to interact with elements.',\n    );\n  }\n\n  const owner = context.owner;\n\n  let rootElement;\n  // When the host app uses `setApplication` (instead of `setResolver`) the owner has\n  // a `rootElement` set on it with the element or id to be used\n  if (owner && owner._emberTestHelpersMockOwner === undefined) {\n    rootElement = owner.rootElement;\n  } else {\n    rootElement = '#ember-testing';\n  }\n\n  if (rootElement instanceof Window) {\n    rootElement = rootElement.document;\n  }\n\n  if (isElement(rootElement) || isDocument(rootElement)) {\n    return rootElement;\n  } else if (typeof rootElement === 'string') {\n    const _rootElement = document.querySelector(rootElement);\n    if (_rootElement) {\n      return _rootElement;\n    }\n\n    throw new Error(`Application.rootElement (${rootElement}) not found`);\n  } else {\n    throw new Error(\n      'Application.rootElement must be an element or a selector string',\n    );\n  }\n}\n"],"names":["getRootElement","context","getContext","isTestContext","owner","Error","rootElement","_emberTestHelpersMockOwner","undefined","Window","document","isElement","isDocument","_rootElement","querySelector"],"mappings":";;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASA,cAAcA,GAAuB;AAC3D,EAAA,MAAMC,OAAO,GAAGC,UAAU,EAAE,CAAA;AAE5B,EAAA,IAAI,CAACD,OAAO,IAAI,CAACE,aAAa,CAACF,OAAO,CAAC,IAAI,CAACA,OAAO,CAACG,KAAK,EAAE;AACzD,IAAA,MAAM,IAAIC,KAAK,CACb,2EACF,CAAC,CAAA;AACH,GAAA;AAEA,EAAA,MAAMD,KAAK,GAAGH,OAAO,CAACG,KAAK,CAAA;AAE3B,EAAA,IAAIE,WAAW,CAAA;AACf;AACA;AACA,EAAA,IAAIF,KAAK,IAAIA,KAAK,CAACG,0BAA0B,KAAKC,SAAS,EAAE;IAC3DF,WAAW,GAAGF,KAAK,CAACE,WAAW,CAAA;AACjC,GAAC,MAAM;AACLA,IAAAA,WAAW,GAAG,gBAAgB,CAAA;AAChC,GAAA;EAEA,IAAIA,WAAW,YAAYG,MAAM,EAAE;IACjCH,WAAW,GAAGA,WAAW,CAACI,QAAQ,CAAA;AACpC,GAAA;EAEA,IAAIC,SAAS,CAACL,WAAW,CAAC,IAAIM,UAAU,CAACN,WAAW,CAAC,EAAE;AACrD,IAAA,OAAOA,WAAW,CAAA;AACpB,GAAC,MAAM,IAAI,OAAOA,WAAW,KAAK,QAAQ,EAAE;AAC1C,IAAA,MAAMO,YAAY,GAAGH,QAAQ,CAACI,aAAa,CAACR,WAAW,CAAC,CAAA;AACxD,IAAA,IAAIO,YAAY,EAAE;AAChB,MAAA,OAAOA,YAAY,CAAA;AACrB,KAAA;AAEA,IAAA,MAAM,IAAIR,KAAK,CAAC,CAA4BC,yBAAAA,EAAAA,WAAW,aAAa,CAAC,CAAA;AACvE,GAAC,MAAM;AACL,IAAA,MAAM,IAAID,KAAK,CACb,iEACF,CAAC,CAAA;AACH,GAAA;AACF;;;;"}