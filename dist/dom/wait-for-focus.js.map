{"version":3,"file":"wait-for-focus.js","sources":["../../src/dom/wait-for-focus.ts"],"sourcesContent":["import waitUntil from '../wait-until.ts';\nimport getElement from './-get-element.ts';\nimport {\n  type IDOMElementDescriptor,\n  lookupDescriptorData,\n} from 'dom-element-descriptors';\nimport getDescription from './-get-description.ts';\n\nexport interface Options {\n  timeout?: number;\n  count?: number | null;\n  timeoutMessage?: string;\n}\n\n/**\n  Used to wait for a particular selector to receive focus. Useful for verifying\n  keyboard navigation handling and default focus behaviour, without having to\n  think about timing issues.\n\n  @param {string|IDOMElementDescriptor} target the selector or DOM element descriptor to wait receiving focus\n  @param {Object} [options] the options to be used\n  @param {number} [options.timeout=1000] the time to wait (in ms) for a match\n  @param {string} [options.timeoutMessage='waitForFocus timed out waiting for selector'] the message to use in the reject on timeout\n  @return {Promise<Element>} resolves when the element received focus\n\n  @example\n  <caption>\n    Waiting until a selector receive focus:\n  </caption>\n  await waitForFocus('.my-selector', { timeout: 2000 })\n*/\nexport default function waitForFocus(\n  target: string | IDOMElementDescriptor,\n  options: Options = {},\n): Promise<Element> {\n  return Promise.resolve().then(() => {\n    if (typeof target !== 'string' && !lookupDescriptorData(target)) {\n      throw new Error(\n        'Must pass a selector or DOM element descriptor to `waitFor`.',\n      );\n    }\n\n    const { timeout = 1000 } = options;\n    let { timeoutMessage } = options;\n\n    if (!timeoutMessage) {\n      const description = getDescription(target);\n      timeoutMessage = `waitForFocus timed out waiting for selector \"${description}\"`;\n    }\n\n    return waitUntil(\n      () => {\n        const element = getElement(target);\n        if (element && element === document.activeElement) {\n          return document.activeElement as HTMLElement;\n        }\n      },\n      { timeout, timeoutMessage },\n    );\n  });\n}\n"],"names":["waitForFocus","target","options","Promise","resolve","then","lookupDescriptorData","Error","timeout","timeoutMessage","description","getDescription","waitUntil","element","getElement","document","activeElement"],"mappings":";;;;;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASA,YAAYA,CAClCC,MAAsC,EACtCC,OAAgB,GAAG,EAAE,EACH;EAClB,OAAOC,OAAO,CAACC,OAAO,EAAE,CAACC,IAAI,CAAC,MAAM;IAClC,IAAI,OAAOJ,MAAM,KAAK,QAAQ,IAAI,CAACK,oBAAoB,CAACL,MAAM,CAAC,EAAE;AAC/D,MAAA,MAAM,IAAIM,KAAK,CACb,8DACF,CAAC,CAAA;AACH,KAAA;IAEA,MAAM;AAAEC,MAAAA,OAAO,GAAG,IAAA;AAAK,KAAC,GAAGN,OAAO,CAAA;IAClC,IAAI;AAAEO,MAAAA,cAAAA;AAAe,KAAC,GAAGP,OAAO,CAAA;IAEhC,IAAI,CAACO,cAAc,EAAE;AACnB,MAAA,MAAMC,WAAW,GAAGC,cAAc,CAACV,MAAM,CAAC,CAAA;MAC1CQ,cAAc,GAAG,CAAgDC,6CAAAA,EAAAA,WAAW,CAAG,CAAA,CAAA,CAAA;AACjF,KAAA;IAEA,OAAOE,SAAS,CACd,MAAM;AACJ,MAAA,MAAMC,OAAO,GAAGC,UAAU,CAACb,MAAM,CAAC,CAAA;AAClC,MAAA,IAAIY,OAAO,IAAIA,OAAO,KAAKE,QAAQ,CAACC,aAAa,EAAE;QACjD,OAAOD,QAAQ,CAACC,aAAa,CAAA;AAC/B,OAAA;AACF,KAAC,EACD;MAAER,OAAO;AAAEC,MAAAA,cAAAA;AAAe,KAC5B,CAAC,CAAA;AACH,GAAC,CAAC,CAAA;AACJ;;;;"}