{"version":3,"file":"type-in.js","sources":["../../src/dom/type-in.ts"],"sourcesContent":["import settled from '../settled.ts';\nimport getElement from './-get-element.ts';\nimport isFormControl, { type FormControl } from './-is-form-control.ts';\nimport { __focus__ } from './focus.ts';\nimport fireEvent from './fire-event.ts';\nimport guardForMaxlength from './-guard-for-maxlength.ts';\nimport {\n  type Target,\n  isContentEditable,\n  isDocument,\n  type HTMLElementContentEditable,\n} from './-target.ts';\nimport { __triggerKeyEvent__ } from './trigger-key-event.ts';\nimport { log } from './-logging.ts';\nimport { runHooks, registerHook } from '../helper-hooks.ts';\nimport getDescription from './-get-description.ts';\n\nexport interface Options {\n  delay?: number;\n}\n\nregisterHook('typeIn', 'start', (target: Target, text: string) => {\n  log('typeIn', target, text);\n});\n\n/**\n * Mimics character by character entry into the target `input` or `textarea` element.\n *\n * Allows for simulation of slow entry by passing an optional millisecond delay\n * between key events.\n\n * The major difference between `typeIn` and `fillIn` is that `typeIn` triggers\n * keyboard events as well as `input` and `change`.\n * Typically this looks like `focus` -> `focusin` -> `keydown` -> `keypress` -> `keyup` -> `input` -> `change`\n * per character of the passed text (this may vary on some browsers).\n *\n * @public\n * @param {string|Element|IDOMElementDescriptor} target the element, selector, or descriptor to enter text into\n * @param {string} text the test to fill the element with\n * @param {Object} options {delay: x} (default 50) number of milliseconds to wait per keypress\n * @return {Promise<void>} resolves when the application is settled\n *\n * @example\n * <caption>\n *   Emulating typing in an input using `typeIn`\n * </caption>\n *\n * typeIn('input', 'hello world');\n */\nexport default function typeIn(\n  target: Target,\n  text: string,\n  options: Options = {},\n): Promise<void> {\n  return Promise.resolve()\n    .then(() => {\n      return runHooks('typeIn', 'start', target, text, options);\n    })\n    .then(() => {\n      if (!target) {\n        throw new Error(\n          'Must pass an element, selector, or descriptor to `typeIn`.',\n        );\n      }\n\n      const element = getElement(target);\n\n      if (!element) {\n        const description = getDescription(target);\n        throw new Error(\n          `Element not found when calling \\`typeIn('${description}')\\``,\n        );\n      }\n\n      if (\n        isDocument(element) ||\n        (!isFormControl(element) && !isContentEditable(element))\n      ) {\n        throw new Error(\n          '`typeIn` is only usable on form controls or contenteditable elements.',\n        );\n      }\n\n      if (typeof text === 'undefined' || text === null) {\n        throw new Error('Must provide `text` when calling `typeIn`.');\n      }\n\n      if (isFormControl(element)) {\n        if (element.disabled) {\n          throw new Error(\n            `Can not \\`typeIn\\` disabled '${getDescription(target)}'.`,\n          );\n        }\n\n        if ('readOnly' in element && element.readOnly) {\n          throw new Error(\n            `Can not \\`typeIn\\` readonly '${getDescription(target)}'.`,\n          );\n        }\n      }\n\n      const { delay = 50 } = options;\n\n      return __focus__(element)\n        .then(() => fillOut(element, text, delay))\n        .then(() => fireEvent(element, 'change'))\n        .then(settled)\n        .then(() => runHooks('typeIn', 'end', target, text, options));\n    });\n}\n\n// eslint-disable-next-line require-jsdoc\nfunction fillOut(\n  element: FormControl | HTMLElementContentEditable,\n  text: string,\n  delay: number,\n) {\n  const inputFunctions = text\n    .split('')\n    .map((character) => keyEntry(element, character));\n  return inputFunctions.reduce((currentPromise, func) => {\n    return currentPromise.then(() => delayedExecute(delay)).then(func);\n  }, Promise.resolve());\n}\n\n// eslint-disable-next-line require-jsdoc\nfunction keyEntry(\n  element: FormControl | HTMLElementContentEditable,\n  character: string,\n): () => void {\n  const shiftKey =\n    character === character.toUpperCase() &&\n    character !== character.toLowerCase();\n  const options = { shiftKey };\n  const characterKey = character.toUpperCase();\n\n  return function () {\n    return Promise.resolve()\n      .then(() =>\n        __triggerKeyEvent__(element, 'keydown', characterKey, options),\n      )\n      .then(() =>\n        __triggerKeyEvent__(element, 'keypress', characterKey, options),\n      )\n      .then(() => {\n        if (isFormControl(element)) {\n          const newValue = element.value + character;\n          guardForMaxlength(element, newValue, 'typeIn');\n\n          element.value = newValue;\n        } else {\n          const newValue = element.innerHTML + character;\n          element.innerHTML = newValue;\n        }\n        return fireEvent(element, 'input');\n      })\n      .then(() => __triggerKeyEvent__(element, 'keyup', characterKey, options));\n  };\n}\n\n// eslint-disable-next-line require-jsdoc\nfunction delayedExecute(delay: number): Promise<void> {\n  return new Promise((resolve) => {\n    setTimeout(resolve, delay);\n  });\n}\n"],"names":["registerHook","target","text","log","typeIn","options","Promise","resolve","then","runHooks","Error","element","getElement","description","getDescription","isDocument","isFormControl","isContentEditable","disabled","readOnly","delay","__focus__","fillOut","fireEvent","settled","inputFunctions","split","map","character","keyEntry","reduce","currentPromise","func","delayedExecute","shiftKey","toUpperCase","toLowerCase","characterKey","__triggerKeyEvent__","newValue","value","guardForMaxlength","innerHTML","setTimeout"],"mappings":";;;;;;;;;;;;AAqBAA,YAAY,CAAC,QAAQ,EAAE,OAAO,EAAE,CAACC,MAAc,EAAEC,IAAY,KAAK;AAChEC,EAAAA,GAAG,CAAC,QAAQ,EAAEF,MAAM,EAAEC,IAAI,CAAC,CAAA;AAC7B,CAAC,CAAC,CAAA;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASE,MAAMA,CAC5BH,MAAc,EACdC,IAAY,EACZG,OAAgB,GAAG,EAAE,EACN;EACf,OAAOC,OAAO,CAACC,OAAO,EAAE,CACrBC,IAAI,CAAC,MAAM;IACV,OAAOC,QAAQ,CAAC,QAAQ,EAAE,OAAO,EAAER,MAAM,EAAEC,IAAI,EAAEG,OAAO,CAAC,CAAA;AAC3D,GAAC,CAAC,CACDG,IAAI,CAAC,MAAM;IACV,IAAI,CAACP,MAAM,EAAE;AACX,MAAA,MAAM,IAAIS,KAAK,CACb,4DACF,CAAC,CAAA;AACH,KAAA;AAEA,IAAA,MAAMC,OAAO,GAAGC,UAAU,CAACX,MAAM,CAAC,CAAA;IAElC,IAAI,CAACU,OAAO,EAAE;AACZ,MAAA,MAAME,WAAW,GAAGC,cAAc,CAACb,MAAM,CAAC,CAAA;AAC1C,MAAA,MAAM,IAAIS,KAAK,CACb,CAA4CG,yCAAAA,EAAAA,WAAW,MACzD,CAAC,CAAA;AACH,KAAA;AAEA,IAAA,IACEE,UAAU,CAACJ,OAAO,CAAC,IAClB,CAACK,aAAa,CAACL,OAAO,CAAC,IAAI,CAACM,iBAAiB,CAACN,OAAO,CAAE,EACxD;AACA,MAAA,MAAM,IAAID,KAAK,CACb,uEACF,CAAC,CAAA;AACH,KAAA;IAEA,IAAI,OAAOR,IAAI,KAAK,WAAW,IAAIA,IAAI,KAAK,IAAI,EAAE;AAChD,MAAA,MAAM,IAAIQ,KAAK,CAAC,4CAA4C,CAAC,CAAA;AAC/D,KAAA;AAEA,IAAA,IAAIM,aAAa,CAACL,OAAO,CAAC,EAAE;MAC1B,IAAIA,OAAO,CAACO,QAAQ,EAAE;QACpB,MAAM,IAAIR,KAAK,CACb,CAAA,6BAAA,EAAgCI,cAAc,CAACb,MAAM,CAAC,CAAA,EAAA,CACxD,CAAC,CAAA;AACH,OAAA;AAEA,MAAA,IAAI,UAAU,IAAIU,OAAO,IAAIA,OAAO,CAACQ,QAAQ,EAAE;QAC7C,MAAM,IAAIT,KAAK,CACb,CAAA,6BAAA,EAAgCI,cAAc,CAACb,MAAM,CAAC,CAAA,EAAA,CACxD,CAAC,CAAA;AACH,OAAA;AACF,KAAA;IAEA,MAAM;AAAEmB,MAAAA,KAAK,GAAG,EAAA;AAAG,KAAC,GAAGf,OAAO,CAAA;IAE9B,OAAOgB,SAAS,CAACV,OAAO,CAAC,CACtBH,IAAI,CAAC,MAAMc,OAAO,CAACX,OAAO,EAAET,IAAI,EAAEkB,KAAK,CAAC,CAAC,CACzCZ,IAAI,CAAC,MAAMe,SAAS,CAACZ,OAAO,EAAE,QAAQ,CAAC,CAAC,CACxCH,IAAI,CAACgB,OAAO,CAAC,CACbhB,IAAI,CAAC,MAAMC,QAAQ,CAAC,QAAQ,EAAE,KAAK,EAAER,MAAM,EAAEC,IAAI,EAAEG,OAAO,CAAC,CAAC,CAAA;AACjE,GAAC,CAAC,CAAA;AACN,CAAA;;AAEA;AACA,SAASiB,OAAOA,CACdX,OAAiD,EACjDT,IAAY,EACZkB,KAAa,EACb;AACA,EAAA,MAAMK,cAAc,GAAGvB,IAAI,CACxBwB,KAAK,CAAC,EAAE,CAAC,CACTC,GAAG,CAAEC,SAAS,IAAKC,QAAQ,CAAClB,OAAO,EAAEiB,SAAS,CAAC,CAAC,CAAA;EACnD,OAAOH,cAAc,CAACK,MAAM,CAAC,CAACC,cAAc,EAAEC,IAAI,KAAK;AACrD,IAAA,OAAOD,cAAc,CAACvB,IAAI,CAAC,MAAMyB,cAAc,CAACb,KAAK,CAAC,CAAC,CAACZ,IAAI,CAACwB,IAAI,CAAC,CAAA;AACpE,GAAC,EAAE1B,OAAO,CAACC,OAAO,EAAE,CAAC,CAAA;AACvB,CAAA;;AAEA;AACA,SAASsB,QAAQA,CACflB,OAAiD,EACjDiB,SAAiB,EACL;AACZ,EAAA,MAAMM,QAAQ,GACZN,SAAS,KAAKA,SAAS,CAACO,WAAW,EAAE,IACrCP,SAAS,KAAKA,SAAS,CAACQ,WAAW,EAAE,CAAA;AACvC,EAAA,MAAM/B,OAAO,GAAG;AAAE6B,IAAAA,QAAAA;GAAU,CAAA;AAC5B,EAAA,MAAMG,YAAY,GAAGT,SAAS,CAACO,WAAW,EAAE,CAAA;AAE5C,EAAA,OAAO,YAAY;AACjB,IAAA,OAAO7B,OAAO,CAACC,OAAO,EAAE,CACrBC,IAAI,CAAC,MACJ8B,mBAAmB,CAAC3B,OAAO,EAAE,SAAS,EAAE0B,YAAY,EAAEhC,OAAO,CAC/D,CAAC,CACAG,IAAI,CAAC,MACJ8B,mBAAmB,CAAC3B,OAAO,EAAE,UAAU,EAAE0B,YAAY,EAAEhC,OAAO,CAChE,CAAC,CACAG,IAAI,CAAC,MAAM;AACV,MAAA,IAAIQ,aAAa,CAACL,OAAO,CAAC,EAAE;AAC1B,QAAA,MAAM4B,QAAQ,GAAG5B,OAAO,CAAC6B,KAAK,GAAGZ,SAAS,CAAA;AAC1Ca,QAAAA,iBAAiB,CAAC9B,OAAO,EAAE4B,QAAQ,EAAE,QAAQ,CAAC,CAAA;QAE9C5B,OAAO,CAAC6B,KAAK,GAAGD,QAAQ,CAAA;AAC1B,OAAC,MAAM;AACL,QAAA,MAAMA,QAAQ,GAAG5B,OAAO,CAAC+B,SAAS,GAAGd,SAAS,CAAA;QAC9CjB,OAAO,CAAC+B,SAAS,GAAGH,QAAQ,CAAA;AAC9B,OAAA;AACA,MAAA,OAAOhB,SAAS,CAACZ,OAAO,EAAE,OAAO,CAAC,CAAA;AACpC,KAAC,CAAC,CACDH,IAAI,CAAC,MAAM8B,mBAAmB,CAAC3B,OAAO,EAAE,OAAO,EAAE0B,YAAY,EAAEhC,OAAO,CAAC,CAAC,CAAA;GAC5E,CAAA;AACH,CAAA;;AAEA;AACA,SAAS4B,cAAcA,CAACb,KAAa,EAAiB;AACpD,EAAA,OAAO,IAAId,OAAO,CAAEC,OAAO,IAAK;AAC9BoC,IAAAA,UAAU,CAACpC,OAAO,EAAEa,KAAK,CAAC,CAAA;AAC5B,GAAC,CAAC,CAAA;AACJ;;;;"}