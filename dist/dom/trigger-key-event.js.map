{"version":3,"file":"trigger-key-event.js","sources":["../../src/dom/trigger-key-event.ts"],"sourcesContent":["import getElement from './-get-element.ts';\nimport fireEvent from './fire-event.ts';\nimport settled from '../settled.ts';\nimport {\n  KEYBOARD_EVENT_TYPES,\n  type KeyboardEventType,\n  isKeyboardEventType,\n} from './fire-event.ts';\nimport { isNumeric } from '../-utils.ts';\nimport type { Target } from './-target.ts';\nimport { log } from './-logging.ts';\nimport isFormControl from './-is-form-control.ts';\nimport { runHooks, registerHook } from '../helper-hooks.ts';\nimport getDescription from './-get-description.ts';\n\nregisterHook(\n  'triggerKeyEvent',\n  'start',\n  (target: Target, eventType: KeyboardEventType, key: number | string) => {\n    log('triggerKeyEvent', target, eventType, key);\n  },\n);\n\nexport interface KeyModifiers {\n  ctrlKey?: boolean;\n  altKey?: boolean;\n  shiftKey?: boolean;\n  metaKey?: boolean;\n}\n\nconst DEFAULT_MODIFIERS: KeyModifiers = Object.freeze({\n  ctrlKey: false,\n  altKey: false,\n  shiftKey: false,\n  metaKey: false,\n});\n\n// This is not a comprehensive list, but it is better than nothing.\nconst keyFromKeyCode: { [key: number]: string } = {\n  8: 'Backspace',\n  9: 'Tab',\n  13: 'Enter',\n  16: 'Shift',\n  17: 'Control',\n  18: 'Alt',\n  20: 'CapsLock',\n  27: 'Escape',\n  32: ' ',\n  37: 'ArrowLeft',\n  38: 'ArrowUp',\n  39: 'ArrowRight',\n  40: 'ArrowDown',\n  48: '0',\n  49: '1',\n  50: '2',\n  51: '3',\n  52: '4',\n  53: '5',\n  54: '6',\n  55: '7',\n  56: '8',\n  57: '9',\n  65: 'a',\n  66: 'b',\n  67: 'c',\n  68: 'd',\n  69: 'e',\n  70: 'f',\n  71: 'g',\n  72: 'h',\n  73: 'i',\n  74: 'j',\n  75: 'k',\n  76: 'l',\n  77: 'm',\n  78: 'n',\n  79: 'o',\n  80: 'p',\n  81: 'q',\n  82: 'r',\n  83: 's',\n  84: 't',\n  85: 'u',\n  86: 'v',\n  87: 'w',\n  88: 'x',\n  89: 'y',\n  90: 'z',\n  91: 'Meta',\n  93: 'Meta', // There is two keys that map to meta,\n  186: ';',\n  187: '=',\n  188: ',',\n  189: '-',\n  190: '.',\n  191: '/',\n  219: '[',\n  220: '\\\\',\n  221: ']',\n  222: \"'\",\n};\n\nconst keyFromKeyCodeWithShift: { [key: number]: string } = {\n  48: ')',\n  49: '!',\n  50: '@',\n  51: '#',\n  52: '$',\n  53: '%',\n  54: '^',\n  55: '&',\n  56: '*',\n  57: '(',\n  186: ':',\n  187: '+',\n  188: '<',\n  189: '_',\n  190: '>',\n  191: '?',\n  219: '{',\n  220: '|',\n  221: '}',\n  222: '\"',\n};\n\n/**\n  Calculates the value of KeyboardEvent#key given a keycode and the modifiers.\n  Note that this works if the key is pressed in combination with the shift key, but it cannot\n  detect if caps lock is enabled.\n  @param {number} keycode The keycode of the event.\n  @param {object} modifiers The modifiers of the event.\n  @returns {string} The key string for the event.\n */\nfunction keyFromKeyCodeAndModifiers(\n  keycode: number,\n  modifiers: KeyModifiers,\n): string | void {\n  if (keycode > 64 && keycode < 91) {\n    if (modifiers.shiftKey) {\n      return String.fromCharCode(keycode);\n    } else {\n      return String.fromCharCode(keycode).toLocaleLowerCase();\n    }\n  }\n\n  return (\n    (modifiers.shiftKey && keyFromKeyCodeWithShift[keycode]) ||\n    keyFromKeyCode[keycode]\n  );\n}\n\n/**\n * Infers the keycode from the given key\n * @param {string} key The KeyboardEvent#key string\n * @returns {number} The keycode for the given key\n */\nfunction keyCodeFromKey(key: string) {\n  const keys = Object.keys(keyFromKeyCode);\n  const keyCode =\n    keys.find((keyCode: string) => keyFromKeyCode[Number(keyCode)] === key) ||\n    keys.find(\n      (keyCode: string) =>\n        keyFromKeyCode[Number(keyCode)] === key.toLowerCase(),\n    );\n\n  return keyCode !== undefined ? parseInt(keyCode) : undefined;\n}\n\n/**\n  @private\n  @param {Element | Document} element the element to trigger the key event on\n  @param {'keydown' | 'keyup' | 'keypress'} eventType the type of event to trigger\n  @param {number|string} key the `keyCode`(number) or `key`(string) of the event being triggered\n  @param {Object} [modifiers] the state of various modifier keys\n  @return {Promise<Event>} resolves when settled\n */\nexport function __triggerKeyEvent__(\n  element: Element | Document,\n  eventType: KeyboardEventType,\n  key: number | string,\n  modifiers: KeyModifiers = DEFAULT_MODIFIERS,\n): Promise<Event> {\n  return Promise.resolve().then(() => {\n    let props;\n    if (typeof key === 'number') {\n      props = {\n        keyCode: key,\n        which: key,\n        key: keyFromKeyCodeAndModifiers(key, modifiers),\n        ...modifiers,\n      };\n    } else if (typeof key === 'string' && key.length !== 0) {\n      const firstCharacter = key[0];\n      if (!firstCharacter || firstCharacter !== firstCharacter.toUpperCase()) {\n        throw new Error(\n          `Must provide a \\`key\\` to \\`triggerKeyEvent\\` that starts with an uppercase character but you passed \\`${key}\\`.`,\n        );\n      }\n\n      if (isNumeric(key) && key.length > 1) {\n        throw new Error(\n          `Must provide a numeric \\`keyCode\\` to \\`triggerKeyEvent\\` but you passed \\`${key}\\` as a string.`,\n        );\n      }\n\n      const keyCode = keyCodeFromKey(key);\n      props = { keyCode, which: keyCode, key, ...modifiers };\n    } else {\n      throw new Error(\n        `Must provide a \\`key\\` or \\`keyCode\\` to \\`triggerKeyEvent\\``,\n      );\n    }\n\n    return fireEvent(element, eventType, props);\n  });\n}\n\n/**\n  Triggers a keyboard event of given type in the target element.\n  It also requires the developer to provide either a string with the [`key`](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values)\n  or the numeric [`keyCode`](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/keyCode) of the pressed key.\n  Optionally the user can also provide a POJO with extra modifiers for the event.\n\n  @public\n  @param {string|Element|IDOMElementDescriptor} target the element, selector, or descriptor to trigger the event on\n  @param {'keydown' | 'keyup' | 'keypress'} eventType the type of event to trigger\n  @param {number|string} key the `keyCode`(number) or `key`(string) of the event being triggered\n  @param {Object} [modifiers] the state of various modifier keys\n  @param {boolean} [modifiers.ctrlKey=false] if true the generated event will indicate the control key was pressed during the key event\n  @param {boolean} [modifiers.altKey=false] if true the generated event will indicate the alt key was pressed during the key event\n  @param {boolean} [modifiers.shiftKey=false] if true the generated event will indicate the shift key was pressed during the key event\n  @param {boolean} [modifiers.metaKey=false] if true the generated event will indicate the meta key was pressed during the key event\n  @return {Promise<void>} resolves when the application is settled unless awaitSettled is false\n\n  @example\n  <caption>\n    Emulating pressing the `ENTER` key on a button using `triggerKeyEvent`\n  </caption>\n  triggerKeyEvent('button', 'keydown', 'Enter');\n*/\nexport default function triggerKeyEvent(\n  target: Target,\n  eventType: KeyboardEventType,\n  key: number | string,\n  modifiers: KeyModifiers = DEFAULT_MODIFIERS,\n): Promise<void> {\n  return Promise.resolve()\n    .then(() => {\n      return runHooks('triggerKeyEvent', 'start', target, eventType, key);\n    })\n    .then(() => {\n      if (!target) {\n        throw new Error(\n          'Must pass an element, selector, or descriptor to `triggerKeyEvent`.',\n        );\n      }\n\n      const element = getElement(target);\n      if (!element) {\n        const description = getDescription(target);\n        throw new Error(\n          `Element not found when calling \\`triggerKeyEvent('${description}')\\`.`,\n        );\n      }\n\n      if (!eventType) {\n        throw new Error(`Must provide an \\`eventType\\` to \\`triggerKeyEvent\\``);\n      }\n\n      if (!isKeyboardEventType(eventType)) {\n        const validEventTypes = KEYBOARD_EVENT_TYPES.join(', ');\n        throw new Error(\n          `Must provide an \\`eventType\\` of ${validEventTypes} to \\`triggerKeyEvent\\` but you passed \\`${eventType}\\`.`,\n        );\n      }\n\n      if (isFormControl(element) && element.disabled) {\n        throw new Error(`Can not \\`triggerKeyEvent\\` on disabled ${element}`);\n      }\n\n      return __triggerKeyEvent__(element, eventType, key, modifiers).then(\n        settled,\n      );\n    })\n    .then(() => runHooks('triggerKeyEvent', 'end', target, eventType, key));\n}\n"],"names":["registerHook","target","eventType","key","log","DEFAULT_MODIFIERS","Object","freeze","ctrlKey","altKey","shiftKey","metaKey","keyFromKeyCode","keyFromKeyCodeWithShift","keyFromKeyCodeAndModifiers","keycode","modifiers","String","fromCharCode","toLocaleLowerCase","keyCodeFromKey","keys","keyCode","find","Number","toLowerCase","undefined","parseInt","__triggerKeyEvent__","element","Promise","resolve","then","props","which","length","firstCharacter","toUpperCase","Error","isNumeric","fireEvent","triggerKeyEvent","runHooks","getElement","description","getDescription","isKeyboardEventType","validEventTypes","KEYBOARD_EVENT_TYPES","join","isFormControl","disabled","settled"],"mappings":"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"}