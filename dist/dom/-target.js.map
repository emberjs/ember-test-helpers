{"version":3,"file":"-target.js","sources":["../../src/dom/-target.ts"],"sourcesContent":["import type { IDOMElementDescriptor } from 'dom-element-descriptors';\n\nexport type Target =\n  | string\n  | Element\n  | IDOMElementDescriptor\n  | Document\n  | Window;\n\nexport interface HTMLElementContentEditable extends HTMLElement {\n  isContentEditable: true;\n}\n\n// eslint-disable-next-line require-jsdoc\nexport function isElement(target: unknown): target is Element {\n  return (\n    target !== null &&\n    typeof target === 'object' &&\n    Reflect.get(target, 'nodeType') === Node.ELEMENT_NODE\n  );\n}\n\n// eslint-disable-next-line require-jsdoc\nexport function isWindow(target: Target): target is Window {\n  return target instanceof Window;\n}\n\n// eslint-disable-next-line require-jsdoc\nexport function isDocument(target: unknown): target is Document {\n  return (\n    target !== null &&\n    typeof target === 'object' &&\n    Reflect.get(target, 'nodeType') === Node.DOCUMENT_NODE\n  );\n}\n\n// eslint-disable-next-line require-jsdoc\nexport function isContentEditable(\n  element: Element,\n): element is HTMLElementContentEditable {\n  return (\n    'isContentEditable' in element && (element as HTMLElement).isContentEditable\n  );\n}\n"],"names":["isElement","target","Reflect","get","Node","ELEMENT_NODE","isWindow","Window","isDocument","DOCUMENT_NODE","isContentEditable","element"],"mappings":"AAaA;AACO,SAASA,SAASA,CAACC,MAAe,EAAqB;EAC5D,OACEA,MAAM,KAAK,IAAI,IACf,OAAOA,MAAM,KAAK,QAAQ,IAC1BC,OAAO,CAACC,GAAG,CAACF,MAAM,EAAE,UAAU,CAAC,KAAKG,IAAI,CAACC,YAAY,CAAA;AAEzD,CAAA;;AAEA;AACO,SAASC,QAAQA,CAACL,MAAc,EAAoB;EACzD,OAAOA,MAAM,YAAYM,MAAM,CAAA;AACjC,CAAA;;AAEA;AACO,SAASC,UAAUA,CAACP,MAAe,EAAsB;EAC9D,OACEA,MAAM,KAAK,IAAI,IACf,OAAOA,MAAM,KAAK,QAAQ,IAC1BC,OAAO,CAACC,GAAG,CAACF,MAAM,EAAE,UAAU,CAAC,KAAKG,IAAI,CAACK,aAAa,CAAA;AAE1D,CAAA;;AAEA;AACO,SAASC,iBAAiBA,CAC/BC,OAAgB,EACuB;AACvC,EAAA,OACE,mBAAmB,IAAIA,OAAO,IAAKA,OAAO,CAAiBD,iBAAiB,CAAA;AAEhF;;;;"}