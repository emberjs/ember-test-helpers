{"version":3,"file":"-utils.js","sources":["../src/-utils.ts"],"sourcesContent":["/* globals Promise */\n\nimport isFormControl from './dom/-is-form-control.ts';\n\nexport const nextTick = (cb: () => void) => Promise.resolve().then(cb);\nexport const futureTick = setTimeout;\n\n/**\n Retrieves an array of destroyables from the specified property on the object\n provided, iterates that array invoking each function, then deleting the\n property (clearing the array).\n\n @private\n @param {Object} object an object to search for the destroyable array within\n @param {string} property the property on the object that contains the destroyable array\n*/\nexport function runDestroyablesFor(object: any, property: string): void {\n  const destroyables = object[property];\n\n  if (!destroyables) {\n    return;\n  }\n\n  for (let i = 0; i < destroyables.length; i++) {\n    destroyables[i]();\n  }\n\n  delete object[property];\n}\n\n/**\n Returns whether the passed in string consists only of numeric characters.\n\n @private\n @param {string} n input string\n @returns {boolean} whether the input string consists only of numeric characters\n */\nexport function isNumeric(n: string): boolean {\n  return !isNaN(parseFloat(n)) && isFinite(Number(n));\n}\n\n/**\n  Checks if an element is considered visible by the focus area spec.\n\n  @private\n  @param {Element} element the element to check\n  @returns {boolean} `true` when the element is visible, `false` otherwise\n*/\nexport function isVisible(element: Element): boolean {\n  const styles = window.getComputedStyle(element);\n  return styles.display !== 'none' && styles.visibility !== 'hidden';\n}\n\n/**\n  Checks if an element is disabled.\n\n  @private\n  @param {Element} element the element to check\n  @returns {boolean} `true` when the element is disabled, `false` otherwise\n*/\nexport function isDisabled(element: HTMLElement): boolean {\n  if (isFormControl(element)) {\n    return (element as HTMLInputElement).disabled;\n  }\n  return false;\n}\n"],"names":["nextTick","cb","Promise","resolve","then","futureTick","setTimeout","runDestroyablesFor","object","property","destroyables","i","length","isNumeric","n","isNaN","parseFloat","isFinite","Number","isVisible","element","styles","window","getComputedStyle","display","visibility","isDisabled","isFormControl","disabled"],"mappings":";;AAAA;;AAIaA,MAAAA,QAAQ,GAAIC,EAAc,IAAKC,OAAO,CAACC,OAAO,EAAE,CAACC,IAAI,CAACH,EAAE,EAAC;AAC/D,MAAMI,UAAU,GAAGC,WAAU;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,kBAAkBA,CAACC,MAAW,EAAEC,QAAgB,EAAQ;AACtE,EAAA,MAAMC,YAAY,GAAGF,MAAM,CAACC,QAAQ,CAAC,CAAA;EAErC,IAAI,CAACC,YAAY,EAAE;AACjB,IAAA,OAAA;AACF,GAAA;AAEA,EAAA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,YAAY,CAACE,MAAM,EAAED,CAAC,EAAE,EAAE;AAC5CD,IAAAA,YAAY,CAACC,CAAC,CAAC,EAAE,CAAA;AACnB,GAAA;EAEA,OAAOH,MAAM,CAACC,QAAQ,CAAC,CAAA;AACzB,CAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASI,SAASA,CAACC,CAAS,EAAW;AAC5C,EAAA,OAAO,CAACC,KAAK,CAACC,UAAU,CAACF,CAAC,CAAC,CAAC,IAAIG,QAAQ,CAACC,MAAM,CAACJ,CAAC,CAAC,CAAC,CAAA;AACrD,CAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASK,SAASA,CAACC,OAAgB,EAAW;AACnD,EAAA,MAAMC,MAAM,GAAGC,MAAM,CAACC,gBAAgB,CAACH,OAAO,CAAC,CAAA;EAC/C,OAAOC,MAAM,CAACG,OAAO,KAAK,MAAM,IAAIH,MAAM,CAACI,UAAU,KAAK,QAAQ,CAAA;AACpE,CAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,UAAUA,CAACN,OAAoB,EAAW;AACxD,EAAA,IAAIO,aAAa,CAACP,OAAO,CAAC,EAAE;IAC1B,OAAQA,OAAO,CAAsBQ,QAAQ,CAAA;AAC/C,GAAA;AACA,EAAA,OAAO,KAAK,CAAA;AACd;;;;"}